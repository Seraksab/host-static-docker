
user  nginx;
worker_processes auto;

# number of file descriptors used for nginx
worker_rlimit_nofile 65536;

# only log errors
error_log  /var/log/nginx/error.log error;
pid        /var/run/nginx.pid;

daemon off;

events {
    # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    worker_connections 16384;

    # optimized to serve many clients with each thread, essential for linux
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens               off;

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile                    on;

    # files can be read and sent using multi-threading (1.7.11), without blocking a worker process
    aio                         threads;

    # send headers in one piece
    tcp_nopush                  on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay                 on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection   on;

    # request timed out -- default 60
    client_body_timeout         30;

    # if client stop responding, free up memory -- default 60
    send_timeout                30;

    # server will close idling connection after this time -- default 75
    keepalive_timeout           10;

    # maximum number of requests that can be served through one keep-alive connection -- default 1000
    keepalive_requests          1000;

    include /etc/nginx/conf.d/*.conf;
}
